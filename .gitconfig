[user]
	name = Sterling Camden
	email = rusty.camden@gmail.com
	signingkey = ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCvwSUXfTu9LpZS11J5Ppsetn67OTTXDeuLFxZU5ZomBSTsAX6PQDGxuadLry0ekNXuPCkPr2zdVY5vjBO9D8qL+lLS6vg+jqjA/XdgdgIkh209M4luUdmm15aOZzZzm/Dz21SbNdWQG54r/6xzSVHzN7ZtZ7RuhPwNSAVMg3Rb2pO5ha3khF1mMeeZKV9w36jXMlGDhPmg9gBmhFTmhdoM7h9KXUx4K2VyjK4WoXYk3yfk133/BBMkamH0e3gU+Sd7EPeq1IfgBQCbsxf3PHCwrrTxrSxRezjlT4O3VWSmNIE9WeT5Y/49gFT48cUecX9YN8nagQfDG04KCa3gDmfa+OJ6QXgQbzeS4ntCRImREZNcbatALMSQrMbSrBhDXed0Ua9eq4Xf61Q07IFQjJkOqDN+QNySpgsbIdmKkIf0KDx3KamBCMjqzYrLC7yOZPmrBrEwbRYdIhOu7DcpcAa2Iw55NAZAuz95deuVWEc17GfOzBzUjrbHPlhbzSa90HW2rymaAWaL+wCkk2X38f1EBsE4EblQvJZhGxRGKYW+/vuZ+PHVH6gDASmm6H9DQvOa+6rgAN2FBmOa+EgkyXJf8mY4NxAIgqBVSUVGhaMMzOQjHbTmSfjZOppVGSuoVLMdWg4jkL+fHI+2w04hzET6XPfVgfo5C7abTKVVq1OiNQ==

[include]
  path = ~/watershed/ghg/scripts/.gitconfig ; include by absolute path
[alias]

    pr = pull --rebase
    p = push
    st = status

    cl = clone

    ci = commit
    cim = commit -m
    cm = commit -a -m
    ca = commit --amend
    amend = commit --amend --no-edit
    caa = commit -a --amend -C HEAD
    filelog = log -u
    fl = log -u
    cm = "!git add -u; git cz commit" 

    ai = add --interactive

    co = checkout
    br = branch
    #"!git branch -ra | grep -v done"
    bra = branch -ra
    #list commands
    le = log --oneline --decorate
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    ls1 = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    lds = log --pretty=format:"%C(yellow)%h\\ %C(green)%ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short --graph
    ls = log --pretty=format:"%C(green)%h\\ %C(yellow)[%ad]%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
    lc  = "!f() { git ll "$1"^.."$1"; }; f"
    lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
    #list all aliases
    la = "!git config -l | grep alias | cut -c 7-"
    diff = diff --word-diff
    d = diff --word-diff
    dc = diff --cached
    #list modified files in last commit
    dl = "!git ll -1"
    #diff last commit
    dlc = diff --cached HEAD^
    dr  = "!f() { git diff -w "$1"^.."$1"; }; f"
    diffr  = "!f() { git diff "$1"^.."$1"; }; f"
    branch = branch -ra

    #reset commands
    r = reset
    r1 = reset HEAD^
    r2 = reset HEAD^^
    rh = reset --hard
    rh1 = reset HEAD^ --hard
    rh2 = reset HEAD^^ --hard

    #git svn
    svnr = svn rebase
    svnd = svn dcommit
    svnl = svn log --oneline --show-commit

    #stash
    sl = stash list
    sa = stash apply
    ss = stash save

    cp = cherry-pick
    grep = grep -Ii
    gr = grep -Ii
    #grep from root folder
    gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

    #grep on filename
    f = "!git ls-files | grep -i"

    #rename branch tree to done-
    done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"

    #assume aliases
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    #show assumed files
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    #unassume all the assumed files
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
    assumeall = "!git st -s | awk {'print $2'} | xargs git assume"

    lasttag = describe --tags --abbrev=0
    lt = describe --tags --abbrev=0

    #merges
    ours = "!f() { git co --ours $@ && git add $@; }; f"
    theirs = "!f() { git co --theirs $@ && git add $@; }; f"

    #list remotes
    rem="!git config -l | grep remote.*url | tail -n +2"

    #apply patch from other local repo
    lap = "!f() { git --git-dir=$1 format-patch -k -1 --stdout $2 | git am -3 -k; }; f"

    #subtree add
    sba = "!f() { git subtree add --prefix $2 $1 master --squash; }; f"

    publish = "!git push --force-with-lease -u origin +$(git branch --show-current)"
    

    delete-merged-branches = "!git checkout main && git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

    delete-squashed-branches = "!git checkout -q main && git for-each-ref refs/heads/ \"--format=%(refname:short)\" | while read branch; do mergeBase=$(git merge-base main $branch) && [[ $(git cherry main $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == \"-\"* ]] && git branch -D $branch; done"
    
    purge = "!git delete-squashed-branches; git delete-merged-branches; git fetch --prune --all"

    pub = publish

    pr-branch = "!git stash push -m 'temp-checkout' 2> /dev/null; git co main; git pr; git co -b sterling-$(generate-docker-name); (git stash show -p stash@{0} | grep \"temp-checkout\" && (git stash apply stash^{/temp-checkout}; git stash drop 0)) 2> /dev/null ;"
    prb = pr-branch
    

[color]
    ui = true
    branch = auto
    diff = auto
    status = auto

[color "branch"]
    current = red reverse
    local = blue
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[push]
    default = upstream
[merge]
	tool = vscode
  autoStash = true

[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[diff]
  tool = vscode
[difftool "vscode"]
  # cmd = code-insiders --wait --diff $LOCAL $REMOTE
  cmd = code --wait --diff $LOCAL $REMOTE
[mergetool "vscode"]
  # cmd = code-insiders --wait $MERGED
  cmd = code --wait $MERGED
[core]
	# editor = code-insiders --wait
	editor = code --wait
	#excludesfile = /Users/scamden/.gitignore_global
[blame]
	# ignoreRevsFile = .git-blame-ignore-revs
[rebase]
	autoStash = true
[gpg]
	format = ssh
[gpg "ssh"]
	program = /Applications/1Password.app/Contents/MacOS/op-ssh-sign
[commit]
	gpgsign = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
